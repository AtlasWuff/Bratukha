module.exports = {
    name: 'threadspam',
    aliases: ['ts', 'thread'],
    category: 'Dead',
    utilisation: '{prefix}threadspam',

    execute(client, message, args) {
        var msgArgs = message.content.split(' ')
        msgArgs.shift()
        var msgArgs = msgArgs.join(' ')
        console.log(msgArgs)
        console.log(message.channel)

        async function l () {
            var channel = client.channels.fetch(message.channel.id)
            var thread = await channel.threads.create({
                name: msgArgs,
                autoArchiveDuration: 60,
                reason: 'L + Bozo + Ratio + Fatherless',
            })
            console.log(thread)
        }
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
        l()
    },
};
